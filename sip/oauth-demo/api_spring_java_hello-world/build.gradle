buildscript {
  configurations.classpath {
    resolutionStrategy.activateDependencyLocking()
  }
}

plugins {
  id 'checkstyle'
  id 'java'

  id 'io.spring.dependency-management' version '1.0.11.RELEASE'
  id 'org.springframework.boot' version '2.7.1'
  id 'se.solrike.sonarlint' version '1.0.0-beta.4'
}

group = 'com.example'
version = '1.0.0'
sourceCompatibility = JavaVersion.VERSION_17

checkstyle {
  toolVersion = '10.3'
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

dependencies {

  implementation('io.github.cdimascio:dotenv-java:2.2.4')
  implementation('me.paulschwarz:spring-dotenv:2.4.1')
  implementation('org.springframework.boot:spring-boot-starter-oauth2-resource-server')
  implementation('org.springframework.boot:spring-boot-starter-security')
  implementation('org.springframework.boot:spring-boot-starter-web')

  implementation 'org.springdoc:springdoc-openapi-ui:1.6.15'
//  implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.0.4'
//  implementation 'org.postgresql:postgresql:42.5.4'

  annotationProcessor('org.projectlombok:lombok')
  annotationProcessor('org.springframework.boot:spring-boot-configuration-processor')
  compileOnly('org.projectlombok:lombok')
  developmentOnly('org.springframework.boot:spring-boot-devtools')
  sonarlintPlugins('org.sonarsource.java:sonar-java-plugin:7.13.0.29990')

  testImplementation('org.springframework.boot:spring-boot-starter-test')
  testImplementation('org.springframework.security:spring-security-test')


}

tasks.named('test') {
  useJUnitPlatform()
}
